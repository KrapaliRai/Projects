/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Volunteer;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.NGOEnterprise;
import Business.Inventory.Disability;
import Business.Network.Network;
import Business.Organization.NGOAdminOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientWorkRequest1;
import java.awt.CardLayout;
//import java.net.PasswordAuthentication;
import java.util.Properties;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author krapa
 */
public class PatientRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientRequestJPanel
     * 
     */
    JPanel userProcessContainer;
    private EcoSystem business;
    UserAccount account;
   
    public PatientRequestJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.business = business;
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        populateDisabilityComboBox();
    }

    public void emailFunction(){
    
        Properties prop = new Properties();
        prop.put("mail.smtp.user","happyhandsalbatross@gmail.com");
        prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "465");
        
        prop.put("mail.smtp.starttls.enable","true");
        prop.put("mail.smtp.debug", "true");
        
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.socketFactory.port","465"); //its mentioned in java site for SSL port is 465 for ssl
        prop.put("mail.smtp.socketFactory.Class", "javax.net.ssl.SSLSocketFactory");
        
        
        
        Session session = Session.getDefaultInstance(prop,new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication(){
                return new PasswordAuthentication("happyhandsalbatross@gmail.com", "happyhands123");
                }
                }
                );
           try{
                Message mess = new MimeMessage(session);
                mess.setFrom(new InternetAddress("happyhands795@gmail.com"));
                mess.setRecipients(Message.RecipientType.TO, InternetAddress.parse(txtemail.getText()));
                mess.setSubject("Request Process From Happy Hands");
               // mess.setText("Test mail from Ecoguard");
                //Transport.send(mess);
                
                //Attachment
                MimeBodyPart msgBodyPart = new MimeBodyPart();
                msgBodyPart.setText("Hi,");
                msgBodyPart.setText("Your Request has been recieved and its under process.");
                Multipart multiPart = new MimeMultipart();
                
               // String fileAbPath = convertToPdf();
                String filepath = "G:\\MARIA\\Dinesh_CV_1march.pdf";
                
                MimeBodyPart msgBodyPart2 = new MimeBodyPart();
                DataSource src = new FileDataSource(filepath);
                msgBodyPart2.setDataHandler(new DataHandler(src));
                msgBodyPart2.setFileName("Ecoguard Analysis.pdf");
               
                multiPart.addBodyPart(msgBodyPart);
               // multiPart.addBodyPart(msgBodyPart2);

                mess.setContent(multiPart);

                Transport transport = session.getTransport("smtps");
                transport.connect("smtp.gmail.com", Integer.valueOf("465"), "happyhandsalbatross@gmail.com", "happyhands123");
                transport.sendMessage(mess, mess.getAllRecipients());
                transport.close();
                
                
                JOptionPane.showMessageDialog(null, "Your Request has been Sent for approval, You would have recieved a confirmation mail");
           }catch(Exception e){
               JOptionPane.showMessageDialog(null, e);
           }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BtnSubmit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtemail = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtcontactnumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtZip = new javax.swing.JTextField();
        txtcity = new javax.swing.JTextField();
        txtstate = new javax.swing.JTextField();
        txtcountry = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaddress = new javax.swing.JTextArea();
        txtemergencyContact = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CmbDisability = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdesc = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("PATIENT GENERAL REQUEST FORM");

        BtnSubmit.setText("Submit Request");
        BtnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSubmitActionPerformed(evt);
            }
        });

        jLabel6.setText("Patient Contact Number:");

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        jLabel14.setText("Patient Email:");

        jLabel7.setText("Patient Address1:");

        jLabel15.setText("Emergency Contact:");

        jLabel3.setText("Patient Name:");

        jLabel9.setText("City:");

        jLabel10.setText("Postal Code:");

        jLabel11.setText("Country:");

        jLabel12.setText("State:");

        txtZip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipActionPerformed(evt);
            }
        });

        txtaddress.setColumns(20);
        txtaddress.setRows(5);
        jScrollPane1.setViewportView(txtaddress);

        jLabel2.setText("Disability: ");

        CmbDisability.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CmbDisability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CmbDisabilityActionPerformed(evt);
            }
        });

        jLabel4.setText("Description of need:");

        txtdesc.setColumns(20);
        txtdesc.setRows(5);
        jScrollPane2.setViewportView(txtdesc);

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Emblem.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jButton1)
                                .addGap(277, 277, 277)
                                .addComponent(BtnSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(251, 251, 251)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(txtname)
                                                        .addComponent(txtcontactnumber)
                                                        .addComponent(txtcity)
                                                        .addComponent(txtemail)
                                                        .addComponent(CmbDisability, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE))
                                                    .addComponent(txtcountry, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(txtZip, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtemergencyContact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtcontactnumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtemergencyContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(CmbDisability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnSubmit)
                    .addComponent(jButton1))
                .addGap(58, 58, 58))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateDisabilityComboBox(){
        CmbDisability.removeAllItems();
        
        for (Disability disability : business.getDisabilityCatalog().getDisabilityList()){
            CmbDisability.addItem(disability.getName());
        }
    }
    private void txtZipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipActionPerformed

    private void BtnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSubmitActionPerformed
        String namePattern="[a-zA-Z]+";
        String numberPattern="[0-9]+";
        String emailPattern="[a-zA-Z0-9._%+-]+@[a-zA-Z.-]+\\.[a-zA-Z]{2,4}";
        if(txtname.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Patient name is a mandatory field");
            return;
        }
        if(!txtname.getText().matches(namePattern)){
            JOptionPane.showMessageDialog(null,"Patient name must only contain alphabets");
            return;
        }
        if(txtcontactnumber.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Contact Number is a mandatory field");
            return;
        }
        if(!txtcontactnumber.getText().matches(numberPattern)){
            JOptionPane.showMessageDialog(null,"Patient contact number must only contain numbers [0-9]");
            return;
        }
        if(txtcontactnumber.getText().length()!=10){
            JOptionPane.showMessageDialog(null,"Enter a valid Patient contact number");
            return;
        }
        if(txtemergencyContact.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Emergency Contact Number is a mandatory field");
            return;
        }
        if(!txtemergencyContact.getText().matches(numberPattern)){
            JOptionPane.showMessageDialog(null,"Emergency contact number must only contain numbers [0-9]");
            return;
        }
        if(txtemergencyContact.getText().length()!=10){
            JOptionPane.showMessageDialog(null,"Enter a valid emergency contact number");
            return;
        }
        if(txtZip.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"zip is a mandatory field");
            return;
        }
        if(!txtZip.getText().matches(numberPattern)){
            JOptionPane.showMessageDialog(null,"zipcode or pincode must only contain numbers [0-9]");
            return;
        }
        if(txtZip.getText().length()!=5){
            JOptionPane.showMessageDialog(null,"Enter a valid Zipcode");
            return;
        }
        if(txtemail.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Patient Email ID is a mandatory field");
            return;
        }
        if(!txtemail.getText().matches(emailPattern)){
            JOptionPane.showMessageDialog(null,"Please enter a valid email Address");
            return;
        }
        if(txtaddress.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Patient Address is a mandatory field");
            return;
        }
        if(txtdesc.getText().isEmpty()){
            JOptionPane.showMessageDialog(null,"Request Description is a mandatory field");
            return;
        }
        Organization inorg=null;
        for (Network networkobj: business.getNetworkList())
        {
            for(Enterprise enterprise:networkobj.getEnterpriseDirectory().getEnterpriseList())
            {
                if(enterprise instanceof NGOEnterprise)
                {
                    for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList())
                    {
                        if(org instanceof NGOAdminOrganization)
                        {
                            inorg = org;
                        }
                    }
                }
            }
        }
        
        PatientWorkRequest1 P1 = new PatientWorkRequest1();
        P1.setDisability((String)CmbDisability.getSelectedItem());
        P1.getPerson().setDescription(txtdesc.getText());
        P1.getPerson().setName(txtname.getText());
        P1.getPerson().setEmailId(txtemail.getText());
        P1.getPerson().setPhonenumber(Long.parseLong(txtcontactnumber.getText()));
        P1.getPerson().setEmergencynumber(Long.parseLong(txtemergencyContact.getText()));
        P1.getAddress().setCity(txtcity.getText());
        P1.getAddress().setZip(Integer.parseInt(txtZip.getText()));
        P1.getAddress().setAddress(txtaddress.getText());
        P1.getAddress().setCountry(txtcountry.getText());
        P1.getAddress().setState(txtstate.getText());
        
        P1.setSender(account);
        P1.setVolunteer(account);
        P1.setReceiver(null);
        P1.setStatus("request Sent");
        
        inorg.getWorkQueue().getWorkRequestList().add(P1);
        emailFunction();
    }//GEN-LAST:event_BtnSubmitActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void CmbDisabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CmbDisabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CmbDisabilityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSubmit;
    private javax.swing.JComboBox<String> CmbDisability;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtZip;
    private javax.swing.JTextArea txtaddress;
    private javax.swing.JTextField txtcity;
    private javax.swing.JTextField txtcontactnumber;
    private javax.swing.JTextField txtcountry;
    private javax.swing.JTextArea txtdesc;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtemergencyContact;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtstate;
    // End of variables declaration//GEN-END:variables
}
